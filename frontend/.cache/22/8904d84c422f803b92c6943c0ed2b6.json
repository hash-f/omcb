{"id":"node_modules/react-use-websocket/dist/lib/create-or-join.js","dependencies":[{"name":"/Users/h/Developer/go-by-example/omcb/frontend/node_modules/react-use-websocket/dist/lib/create-or-join.js.map","includedInParent":true,"mtime":1732535186174},{"name":"/Users/h/Developer/go-by-example/omcb/frontend/node_modules/react-use-websocket/src/lib/create-or-join.ts","includedInParent":true,"mtime":1732535186178},{"name":"/Users/h/Developer/go-by-example/omcb/frontend/package.json","includedInParent":true,"mtime":1732535186185},{"name":"/Users/h/Developer/go-by-example/omcb/frontend/node_modules/react-use-websocket/package.json","includedInParent":true,"mtime":1732535186173},{"name":"./globals","loc":{"line":4,"column":24,"index":138},"parent":"/Users/h/Developer/go-by-example/omcb/frontend/node_modules/react-use-websocket/dist/lib/create-or-join.js","resolved":"/Users/h/Developer/go-by-example/omcb/frontend/node_modules/react-use-websocket/dist/lib/globals.js"},{"name":"./constants","loc":{"line":5,"column":26,"index":178},"parent":"/Users/h/Developer/go-by-example/omcb/frontend/node_modules/react-use-websocket/dist/lib/create-or-join.js","resolved":"/Users/h/Developer/go-by-example/omcb/frontend/node_modules/react-use-websocket/dist/lib/constants.js"},{"name":"./attach-listener","loc":{"line":6,"column":32,"index":226},"parent":"/Users/h/Developer/go-by-example/omcb/frontend/node_modules/react-use-websocket/dist/lib/create-or-join.js","resolved":"/Users/h/Developer/go-by-example/omcb/frontend/node_modules/react-use-websocket/dist/lib/attach-listener.js"},{"name":"./attach-shared-listeners","loc":{"line":7,"column":40,"index":288},"parent":"/Users/h/Developer/go-by-example/omcb/frontend/node_modules/react-use-websocket/dist/lib/create-or-join.js","resolved":"/Users/h/Developer/go-by-example/omcb/frontend/node_modules/react-use-websocket/dist/lib/attach-shared-listeners.js"},{"name":"./manage-subscribers","loc":{"line":8,"column":35,"index":353},"parent":"/Users/h/Developer/go-by-example/omcb/frontend/node_modules/react-use-websocket/dist/lib/create-or-join.js","resolved":"/Users/h/Developer/go-by-example/omcb/frontend/node_modules/react-use-websocket/dist/lib/manage-subscribers.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createOrJoinSocket = void 0;\nvar globals_1 = require(\"./globals\");\nvar constants_1 = require(\"./constants\");\nvar attach_listener_1 = require(\"./attach-listener\");\nvar attach_shared_listeners_1 = require(\"./attach-shared-listeners\");\nvar manage_subscribers_1 = require(\"./manage-subscribers\");\n//TODO ensure that all onClose callbacks are called\nvar cleanSubscribers = function (url, subscriber, optionsRef, setReadyState, clearSocketIoPingInterval) {\n    return function () {\n        (0, manage_subscribers_1.removeSubscriber)(url, subscriber);\n        if (!(0, manage_subscribers_1.hasSubscribers)(url)) {\n            try {\n                var socketLike = globals_1.sharedWebSockets[url];\n                if (socketLike instanceof WebSocket) {\n                    socketLike.onclose = function (event) {\n                        if (optionsRef.current.onClose) {\n                            optionsRef.current.onClose(event);\n                        }\n                        setReadyState(constants_1.ReadyState.CLOSED);\n                    };\n                }\n                socketLike.close();\n            }\n            catch (e) {\n            }\n            if (clearSocketIoPingInterval)\n                clearSocketIoPingInterval();\n            delete globals_1.sharedWebSockets[url];\n        }\n    };\n};\nvar createOrJoinSocket = function (webSocketRef, url, setReadyState, optionsRef, setLastMessage, startRef, reconnectCount, lastMessageTime, sendMessage) {\n    if (!constants_1.isEventSourceSupported && optionsRef.current.eventSourceOptions) {\n        if (constants_1.isReactNative) {\n            throw new Error('EventSource is not supported in ReactNative');\n        }\n        else {\n            throw new Error('EventSource is not supported');\n        }\n    }\n    if (optionsRef.current.share) {\n        var clearSocketIoPingInterval = null;\n        if (globals_1.sharedWebSockets[url] === undefined) {\n            globals_1.sharedWebSockets[url] = optionsRef.current.eventSourceOptions ?\n                new EventSource(url, optionsRef.current.eventSourceOptions) :\n                new WebSocket(url, optionsRef.current.protocols);\n            webSocketRef.current = globals_1.sharedWebSockets[url];\n            setReadyState(constants_1.ReadyState.CONNECTING);\n            clearSocketIoPingInterval = (0, attach_shared_listeners_1.attachSharedListeners)(globals_1.sharedWebSockets[url], url, optionsRef, sendMessage);\n        }\n        else {\n            webSocketRef.current = globals_1.sharedWebSockets[url];\n            setReadyState(globals_1.sharedWebSockets[url].readyState);\n        }\n        var subscriber = {\n            setLastMessage: setLastMessage,\n            setReadyState: setReadyState,\n            optionsRef: optionsRef,\n            reconnectCount: reconnectCount,\n            lastMessageTime: lastMessageTime,\n            reconnect: startRef,\n        };\n        (0, manage_subscribers_1.addSubscriber)(url, subscriber);\n        return cleanSubscribers(url, subscriber, optionsRef, setReadyState, clearSocketIoPingInterval);\n    }\n    else {\n        webSocketRef.current = optionsRef.current.eventSourceOptions ?\n            new EventSource(url, optionsRef.current.eventSourceOptions) :\n            new WebSocket(url, optionsRef.current.protocols);\n        setReadyState(constants_1.ReadyState.CONNECTING);\n        if (!webSocketRef.current) {\n            throw new Error('WebSocket failed to be created');\n        }\n        return (0, attach_listener_1.attachListeners)(webSocketRef.current, {\n            setLastMessage: setLastMessage,\n            setReadyState: setReadyState\n        }, optionsRef, startRef.current, reconnectCount, lastMessageTime, sendMessage);\n    }\n};\nexports.createOrJoinSocket = createOrJoinSocket;\n"},"sourceMaps":{"js":{"version":3,"file":"create-or-join.js","sourceRoot":"","sources":["../../src/lib/create-or-join.ts"],"names":[],"mappings":"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","sourcesContent":["import { MutableRefObject } from 'react';\nimport { sharedWebSockets } from './globals';\nimport { Options, SendMessage, Subscriber, WebSocketLike } from './types';\nimport { isEventSourceSupported, ReadyState, isReactNative } from './constants';\nimport { attachListeners } from './attach-listener';\nimport { attachSharedListeners } from './attach-shared-listeners';\nimport { addSubscriber, removeSubscriber, hasSubscribers } from './manage-subscribers';\n\n//TODO ensure that all onClose callbacks are called\n\nconst cleanSubscribers = (\n  url: string,\n  subscriber: Subscriber,\n  optionsRef: MutableRefObject<Options>,\n  setReadyState: (readyState: ReadyState) => void,\n  clearSocketIoPingInterval: (() => void) | null,\n) => {\n  return () => {\n    removeSubscriber(url, subscriber);\n    if (!hasSubscribers(url)) {\n      try {\n        const socketLike = sharedWebSockets[url];\n        if (socketLike instanceof WebSocket) {\n          socketLike.onclose = (event: WebSocketEventMap['close']) => {\n            if (optionsRef.current.onClose) {\n              optionsRef.current.onClose(event);\n            }\n            setReadyState(ReadyState.CLOSED);\n          };\n        }\n        socketLike.close();\n      } catch (e) {\n\n      }\n      if (clearSocketIoPingInterval) clearSocketIoPingInterval();\n\n      delete sharedWebSockets[url];\n    }\n  }\n};\n\nexport const createOrJoinSocket = (\n  webSocketRef: MutableRefObject<WebSocketLike | null>,\n  url: string,\n  setReadyState: (readyState: ReadyState) => void,\n  optionsRef: MutableRefObject<Options>,\n  setLastMessage: (message: WebSocketEventMap['message']) => void,\n  startRef: MutableRefObject<() => void>,\n  reconnectCount: MutableRefObject<number>,\n  lastMessageTime: MutableRefObject<number>,\n  sendMessage: SendMessage,\n): (() => void) => {\n  if (!isEventSourceSupported && optionsRef.current.eventSourceOptions) {\n    if (isReactNative) {\n      throw new Error('EventSource is not supported in ReactNative');\n    } else {\n      throw new Error('EventSource is not supported');\n    }\n  }\n\n  if (optionsRef.current.share) {\n    let clearSocketIoPingInterval: ((() => void) | null) = null;\n    if (sharedWebSockets[url] === undefined) {\n      sharedWebSockets[url] = optionsRef.current.eventSourceOptions ?\n        new EventSource(url, optionsRef.current.eventSourceOptions) :\n        new WebSocket(url, optionsRef.current.protocols);\n      webSocketRef.current = sharedWebSockets[url];\n      setReadyState(ReadyState.CONNECTING);\n      clearSocketIoPingInterval = attachSharedListeners(\n        sharedWebSockets[url],\n        url,\n        optionsRef,\n        sendMessage,\n      );\n    } else {\n      webSocketRef.current = sharedWebSockets[url];\n      setReadyState(sharedWebSockets[url].readyState);\n    }\n\n    const subscriber: Subscriber = {\n      setLastMessage,\n      setReadyState,\n      optionsRef,\n      reconnectCount,\n      lastMessageTime,\n      reconnect: startRef,\n    };\n\n    addSubscriber(url, subscriber);\n\n    return cleanSubscribers(\n      url,\n      subscriber,\n      optionsRef,\n      setReadyState,\n      clearSocketIoPingInterval,\n    );\n  } else {\n    webSocketRef.current = optionsRef.current.eventSourceOptions ?\n      new EventSource(url, optionsRef.current.eventSourceOptions) :\n      new WebSocket(url, optionsRef.current.protocols);\n    setReadyState(ReadyState.CONNECTING);\n    if (!webSocketRef.current) {\n      throw new Error('WebSocket failed to be created');\n    }\n\n    return attachListeners(\n      webSocketRef.current,\n      {\n        setLastMessage,\n        setReadyState\n      },\n      optionsRef,\n      startRef.current,\n      reconnectCount,\n      lastMessageTime,\n      sendMessage,\n    );\n  }\n};\n"]}},"error":null,"hash":"a1efea944b745a7bf6461a7978ef96de","cacheData":{"env":{}}}